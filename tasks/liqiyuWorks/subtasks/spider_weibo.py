#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import logging
from pkg.public.decorator import decorate
import os
import urllib
import time
import requests
import json
from pkg.public.models import BaseModel
import pymongo


class WeiboSpider(BaseModel):
    def __init__(self):
        print("........init..........")
        self.url = "https://api.weibo.cn/2/searchall?gsid={}&from=10B6193010&c=iphone&v_f=1&s=2129ffa3&count={}&page={}&containerid={}"
        self.GSID = os.getenv(
            "GSID", "_2A25LWX-_DeRxGeNI6VUU-CnJyjmIHXVmT_R3rDV6PUJbkdAGLW2gkWpNSJyouzsR3g8pWQ6BnCEn7IYIeyYtncpM")
        self.HEADER = {
            'Host': 's.weibo.com',
            'Accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3',
            'Accept-Encoding': 'gzip, deflate, br',
            'Accept-Language': 'zh-CN,zh;q=0.9',
            'Connection': 'keep-alive',
            'Referer': 'https://weibo.com/',
            'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.97 Safari/537.36'
        }
        self.count = 20
        self.collection = os.getenv('COLLECTION', "weibo_water")
        self.columnsName = ['id', 'user', 'location',
                            'coordinates', 'text', 'date']
        config = {
            'collection': self.collection,
            'uniq_idx': [
                ('id', pymongo.ASCENDING),
            ]
        }

        # words_str = os.getenv('WORDS_LIST', "珍惜水资源,水资源可持续利用,水生态保护,节水意识,水资源危机,水资源保护, \
        #                       珍惜水资源, 水资源危机, 水资源可持续利用, 节水意识, 水生态保护,节约用水, 污染控制, 水质保护, \
        #                       水资源管理, 雨水收集, 水循环利用, 地下水保护, 水生态修复, 水土保持, 水源地保护, 雨水利用技术, \
        #                       水资源保护法, 水资源政策, 环保法规, 水权制度, 水资源税, 水资源法律法规, 水资源管理制度,水处理设备, \
        #                       水质监测技术,农业节水灌溉, 工业废水处理, 城市水务管理, 供水系统优化, 污水处理与再利用, 水资源调度, 水资源分配, \
        #                       水质监测, 水量监测, 水资源评估, 水资源调查, 水资源地理信息系统, 水资源遥感监测,水资源保护宣传, 水资源教育, 环保公益活动, 环保组织, 节水教育, 环保课堂,水环境保护, 湿地保护, \
        #                     河流生态修复, 水域生态系统, 湖泊保护, 海洋保护, 水土保持工程,长江流域水资源保护, 黄河水资源保护, 非洲水资源保护, 亚洲水资源保护, 干旱地区水资源保护, 山区水资源保护, 沿海地区水资源保护,水资源保护技术, 水资源保护研究, 节水技术研究, 水资源模拟与预测, \
        #                         水资源规划与管理, 水资源信息技术,水灾应对, 洪水预警, 干旱管理, 灾害风险管理, 水资源应急管理,水资源经济学, 水资源定价, 水市场, 水利产业发展, 水资源投入产出分析,国际水资源合作, 跨国河流管理, 联合国水资源议程, 全球水资源保护行动, 国际水资源协议,\
        #                             水资源保护成功案例, 流域管理案例分析, 节水型社会建设案例, 水资源保护项目案例,公众参与水资源保护, 社区水资源管理, 环保志愿者活动, 水资源保护志愿者, 居民节水行动,智能水务系统, 水资源物联网, 海水淡化技术, 雨水收集系统创新, 水资源大数据技术, 节水灌溉新技术")
        words_str = os.getenv('WORDS_LIST',"中国水资源分配,西南水资源,西南政策,西南水资源保护,西南人水关系,西南水情,西南水旱,西南水资源管理,西南保护,西南调水,西南节水,西南水资源分配,华北水资源,华北政策,华北水资源保护,华北人水关系,华北水情,华北水旱,华北水资源管理,华北保护,华北调水,华北节水,华北水资源分配,华南水资源,华南政策,华南水资源保护,华南人水关系,华南水情,华南水旱,华南水资源管理,华南保护,华南调水,华南节水,华南水资源分配,华中水资源,华中政策,华中水资源保护,华中人水关系,华中水情,华中水旱,华中水资源管理,华中保护,华中调水,华中节水,华中水资源分配,内地水资源,内地政策,内地水资源保护,内地人水关系,内地水情,内地水旱,内地水资源管理,内地保护,内地调水,内地节水,内地水资源分配,大陆水资源,大陆政策,大陆水资源保护,大陆人水关系,大陆水情,大陆水旱,大陆水资源管理,大陆保护,大陆调水,大陆节水,大陆水资源分配,中部水资源,中部政策,中部水资源保护,中部人水关系,中部水情,中部水旱,中部水资源管理,中部保护,中部调水,中部节水,中部水资源分配,北部水资源,北部政策,北部水资源保护,北部人水关系,北部水情,北部水旱,北部水资源管理,北部保护,北部调水,北部节水,北部水资源分配,南部水资源,南部政策,南部水资源保护,南部人水关系,南部水情,南部水旱,南部水资源管理,南部保护,南部调水,南部节水,南部水资源分配,西部水资源,西部政策,西部水资源保护,西部人水关系,西部水情,西部水旱,西部水资源管理,西部保护,西部调水,西部节水,西部水资源分配,东部水资源,东部政策,东部水资源保护,东部人水关系,东部水情,东部水旱,东部水资源管理,东部保护,东部调水,东部节水,东部水资源分配,沿海地区水资源,沿海地区政策,沿海地区水资源保护,沿海地区人水关系,沿海地区水情,沿海地区水旱,沿海地区水资源管理,沿海地区保护,沿海地区调水,沿海地区节水,沿海地区水资源分配,大山水资源,大山政策,大山水资源保护,大山人水关系,大山水情,大山水旱,大山水资源管理,大山保护,大山调水,大山节水,大山水资源分配,平原水资源,平原政策,平原水资源保护,平原人水关系,平原水情,平原水旱,平原水资源管理,平原保护,平原调水,平原节水,平原水资源分配,地区水资源,地区政策,地区水资源保护,地区人水关系,地区水情,地区水旱,地区水资源管理,地区保护,地区调水,地区节水,地区水资源分配,乡镇水资源,乡镇政策,乡镇水资源保护,乡镇人水关系,乡镇水情,乡镇水旱,乡镇水资源管理,乡镇保护,乡镇调水,乡镇节水,乡镇水资源分配,县城水资源,县城政策,县城水资源保护,县城人水关系,县城水情,县城水旱,县城水资源管理,县城保护,县城调水,县城节水,县城水资源分配,地级市水资源,地级市政策,地级市水资源保护,地级市人水关系,地级市水情,地级市水旱,地级市水资源管理,地级市保护,地级市调水,地级市节水,地级市水资源分配,都市水资源,都市政策,都市水资源保护,都市人水关系,都市水情,都市水旱,都市水资源管理,都市保护,都市调水,都市节水,都市水资源分配,国外水资源,国外政策,国外水资源保护,国外人水关系,国外水情,国外水旱,国外水资源管理,国外保护,国外调水,国外节水,国外水资源分配,北京水资源,北京政策,北京水资源保护,北京人水关系,北京水情,北京水旱,北京水资源管理,北京保护,北京调水,北京节水,北京水资源分配,上海水资源,上海政策,上海水资源保护,上海人水关系,上海水情,上海水旱,上海水资源管理,上海保护,上海调水,上海节水,上海水资源分配,重庆水资源,重庆政策,重庆水资源保护,重庆人水关系,重庆水情,重庆水旱,重庆水资源管理,重庆保护,重庆调水,重庆节水,重庆水资源分配,天津水资源,天津政策,天津水资源保护,天津人水关系,天津水情,天津水旱,天津水资源管理,天津保护,天津调水,天津节水,天津水资源分配,河北水资源,河北政策,河北水资源保护,河北人水关系,河北水情,河北水旱,河北水资源管理,河北保护,河北调水,河北节水,河北水资源分配,山西水资源,山西政策,山西水资源保护,山西人水关系,山西水情,山西水旱,山西水资源管理,山西保护,山西调水,山西节水,山西水资源分配,辽宁水资源,辽宁政策,辽宁水资源保护,辽宁人水关系,辽宁水情,辽宁水旱,辽宁水资源管理,辽宁保护,辽宁调水,辽宁节水,辽宁水资源分配,吉林水资源,吉林政策,吉林水资源保护,吉林人水关系,吉林水情,吉林水旱,吉林水资源管理,吉林保护,吉林调水,吉林节水,吉林水资源分配,黑龙江水资源,黑龙江政策,黑龙江水资源保护,黑龙江人水关系,黑龙江水情,黑龙江水旱,黑龙江水资源管理,黑龙江保护,黑龙江调水,黑龙江节水,黑龙江水资源分配,江苏水资源,江苏政策,江苏水资源保护,江苏人水关系,江苏水情,江苏水旱,江苏水资源管理,江苏保护,江苏调水,江苏节水,江苏水资源分配,浙江水资源,浙江政策,浙江水资源保护,浙江人水关系,浙江水情,浙江水旱,浙江水资源管理,浙江保护,浙江调水,浙江节水,浙江水资源分配,安徽水资源,安徽政策,安徽水资源保护,安徽人水关系,安徽水情,安徽水旱,安徽水资源管理,安徽保护,安徽调水,安徽节水,安徽水资源分配,福建水资源,福建政策,福建水资源保护,福建人水关系,福建水情,福建水旱,福建水资源管理,福建保护,福建调水,福建节水,福建水资源分配,江西水资源,江西政策,江西水资源保护,江西人水关系,江西水情,江西水旱,江西水资源管理,江西保护,江西调水,江西节水,江西水资源分配,山东水资源,山东政策,山东水资源保护,山东人水关系,山东水情,山东水旱,山东水资源管理,山东保护,山东调水,山东节水,山东水资源分配,河南水资源,河南政策,河南水资源保护,河南人水关系,河南水情,河南水旱,河南水资源管理,河南保护,河南调水,河南节水,河南水资源分配,湖北水资源,湖北政策,湖北水资源保护,湖北人水关系,湖北水情,湖北水旱,湖北水资源管理,湖北保护,湖北调水,湖北节水,湖北水资源分配,湖南水资源,湖南政策,湖南水资源保护,湖南人水关系,湖南水情,湖南水旱,湖南水资源管理,湖南保护,湖南调水,湖南节水,湖南水资源分配,广东水资源,广东政策,广东水资源保护,广东人水关系,广东水情,广东水旱,广东水资源管理,广东保护,广东调水,广东节水,广东水资源分配,海南水资源,海南政策,海南水资源保护,海南人水关系,海南水情,海南水旱,海南水资源管理,海南保护,海南调水,海南节水,海南水资源分配,四川水资源,四川政策,四川水资源保护,四川人水关系,四川水情,四川水旱,四川水资源管理,四川保护,四川调水,四川节水,四川水资源分配,贵州水资源,贵州政策,贵州水资源保护,贵州人水关系,贵州水情,贵州水旱,贵州水资源管理,贵州保护,贵州调水,贵州节水,贵州水资源分配,云南水资源,云南政策,云南水资源保护,云南人水关系,云南水情,云南水旱,云南水资源管理,云南保护,云南调水,云南节水,云南水资源分配,陕西水资源,陕西政策,陕西水资源保护,陕西人水关系,陕西水情,陕西水旱,陕西水资源管理,陕西保护,陕西调水,陕西节水,陕西水资源分配,甘肃水资源,甘肃政策,甘肃水资源保护,甘肃人水关系,甘肃水情,甘肃水旱,甘肃水资源管理,甘肃保护,甘肃调水,甘肃节水,甘肃水资源分配,青海水资源,青海政策,青海水资源保护,青海人水关系,青海水情,青海水旱,青海水资源管理,青海保护,青海调水,青海节水,青海水资源分配,台湾水资源,台湾政策,台湾水资源保护,台湾人水关系,台湾水情,台湾水旱,台湾水资源管理,台湾保护,台湾调水,台湾节水,台湾水资源分配")
        words_str = os.getenv('WORDS_LIST',"台湾雨水,台湾水资源分配,台湾节水,台湾调水,台湾净水,台湾水资源管理,台湾水旱,台湾水情,台湾人水关系,台湾洪水,台湾碳水危机,台湾水污染,台湾水资源保护,台湾水资源,青海雨水,青海水资源分配,青海节水,青海调水,青海净水,青海水资源管理,青海水旱,青海水情,青海人水关系,青海洪水,青海碳水危机,青海水污染,青海水资源保护,青海水资源,甘肃雨水,甘肃水资源分配,甘肃节水,甘肃调水,甘肃净水,甘肃水资源管理,甘肃水旱,甘肃水情,甘肃人水关系,甘肃洪水,甘肃碳水危机,甘肃水污染,甘肃水资源保护,甘肃水资源,陕西雨水,陕西水资源分配,陕西节水,陕西调水,陕西净水,陕西水资源管理,陕西水旱,陕西水情,陕西人水关系,陕西洪水,陕西碳水危机,陕西水污染,陕西水资源保护,陕西水资源,云南雨水,云南水资源分配,云南节水,云南调水,云南净水,云南水资源管理,云南水旱,云南水情,云南人水关系,云南洪水,云南碳水危机,云南水污染,云南水资源保护,云南水资源,贵州雨水,贵州水资源分配,贵州节水,贵州调水,贵州净水,贵州水资源管理,贵州水旱,贵州水情,贵州人水关系,贵州洪水,贵州碳水危机,贵州水污染,贵州水资源保护,贵州水资源,四川雨水,四川水资源分配,四川节水,四川调水,四川净水,四川水资源管理,四川水旱,四川水情,四川人水关系,四川洪水,四川碳水危机,四川水污染,四川水资源保护,四川水资源,海南雨水,海南水资源分配,海南节水,海南调水,海南净水,海南水资源管理,海南水旱,海南水情,海南人水关系,海南洪水,海南碳水危机,海南水污染,海南水资源保护,海南水资源,广东雨水,广东水资源分配,广东节水,广东调水,广东净水,广东水资源管理,广东水旱,广东水情,广东人水关系,广东洪水,广东碳水危机,广东水污染,广东水资源保护,广东水资源,湖南雨水,湖南水资源分配,湖南节水,湖南调水,湖南净水,湖南水资源管理,湖南水旱,湖南水情,湖南人水关系,湖南洪水,湖南碳水危机,湖南水污染,湖南水资源保护,湖南水资源,湖北雨水,湖北水资源分配,湖北节水,湖北调水,湖北净水,湖北水资源管理,湖北水旱,湖北水情,湖北人水关系,湖北洪水,湖北碳水危机,湖北水污染,湖北水资源保护,湖北水资源,河南雨水,河南水资源分配,河南节水,河南调水,河南净水,河南水资源管理,河南水旱,河南水情,河南人水关系,河南洪水,河南碳水危机,河南水污染,河南水资源保护,河南水资源,山东雨水,山东水资源分配,山东节水,山东调水,山东净水,山东水资源管理,山东水旱,山东水情,山东人水关系,山东洪水,山东碳水危机,山东水污染,山东水资源保护,山东水资源,江西雨水,江西水资源分配,江西节水,江西调水,江西净水,江西水资源管理,江西水旱,江西水情,江西人水关系,江西洪水,江西碳水危机,江西水污染,江西水资源保护,江西水资源,福建雨水,福建水资源分配,福建节水,福建调水,福建净水,福建水资源管理,福建水旱,福建水情,福建人水关系,福建洪水,福建碳水危机,福建水污染,福建水资源保护,福建水资源,安徽雨水,安徽水资源分配,安徽节水,安徽调水,安徽净水,安徽水资源管理,安徽水旱,安徽水情,安徽人水关系,安徽洪水,安徽碳水危机,安徽水污染,安徽水资源保护,安徽水资源,浙江雨水,浙江水资源分配,浙江节水,浙江调水,浙江净水,浙江水资源管理,浙江水旱,浙江水情,浙江人水关系,浙江洪水,浙江碳水危机,浙江水污染,浙江水资源保护,浙江水资源,江苏雨水,江苏水资源分配,江苏节水,江苏调水,江苏净水,江苏水资源管理,江苏水旱,江苏水情,江苏人水关系,江苏洪水,江苏碳水危机,江苏水污染,江苏水资源保护,江苏水资源,黑龙江雨水,黑龙江水资源分配,黑龙江节水,黑龙江调水,黑龙江净水,黑龙江水资源管理,黑龙江水旱,黑龙江水情,黑龙江人水关系,黑龙江洪水,黑龙江碳水危机,黑龙江水污染,黑龙江水资源保护,黑龙江水资源,吉林雨水,吉林水资源分配,吉林节水,吉林调水,吉林净水,吉林水资源管理,吉林水旱,吉林水情,吉林人水关系,吉林洪水,吉林碳水危机,吉林水污染,吉林水资源保护,吉林水资源,辽宁雨水,辽宁水资源分配,辽宁节水,辽宁调水,辽宁净水,辽宁水资源管理,辽宁水旱,辽宁水情,辽宁人水关系,辽宁洪水,辽宁碳水危机,辽宁水污染,辽宁水资源保护,辽宁水资源,山西雨水,山西水资源分配,山西节水,山西调水,山西净水,山西水资源管理,山西水旱,山西水情,山西人水关系,山西洪水,山西碳水危机,山西水污染,山西水资源保护,山西水资源,河北雨水,河北水资源分配,河北节水,河北调水,河北净水,河北水资源管理,河北水旱,河北水情,河北人水关系,河北洪水,河北碳水危机,河北水污染,河北水资源保护,河北水资源,天津雨水,天津水资源分配,天津节水,天津调水,天津净水,天津水资源管理,天津水旱,天津水情,天津人水关系,天津洪水,天津碳水危机,天津水污染,天津水资源保护,天津水资源,重庆雨水,重庆水资源分配,重庆节水,重庆调水,重庆净水,重庆水资源管理,重庆水旱,重庆水情,重庆人水关系,重庆洪水,重庆碳水危机,重庆水污染,重庆水资源保护,重庆水资源,上海雨水,上海水资源分配,上海节水,上海调水,上海净水,上海水资源管理,上海水旱,上海水情,上海人水关系,上海洪水,上海碳水危机,上海水污染,上海水资源保护,上海水资源,北京雨水,北京水资源分配,北京节水,北京调水,北京净水,北京水资源管理,北京水旱,北京水情,北京人水关系,北京洪水,北京碳水危机,北京水污染,北京水资源保护,北京水资源,国外雨水,国外水资源分配,国外节水,国外调水,国外净水,国外水资源管理,国外水旱,国外水情,国外人水关系,国外洪水,国外碳水危机,国外水污染,国外水资源保护,国外水资源,都市雨水,都市水资源分配,都市节水,都市调水,都市净水,都市水资源管理,都市水旱,都市水情,都市人水关系,都市洪水,都市碳水危机,都市水污染,都市水资源保护,都市水资源,地级市雨水,地级市水资源分配,地级市节水,地级市调水,地级市净水,地级市水资源管理,地级市水旱,地级市水情,地级市人水关系,地级市洪水,地级市碳水危机,地级市水污染,地级市水资源保护,地级市水资源,县城雨水,县城水资源分配,县城节水,县城调水,县城净水,县城水资源管理,县城水旱,县城水情,县城人水关系,县城洪水,县城碳水危机,县城水污染,县城水资源保护,县城水资源,乡镇雨水,乡镇水资源分配,乡镇节水,乡镇调水,乡镇净水,乡镇水资源管理,乡镇水旱,乡镇水情,乡镇人水关系,乡镇洪水,乡镇碳水危机,乡镇水污染,乡镇水资源保护,乡镇水资源,地区雨水,地区水资源分配,地区节水,地区调水,地区净水,地区水资源管理,地区水旱,地区水情,地区人水关系,地区洪水,地区碳水危机,地区水污染,地区水资源保护,地区水资源,平原雨水,平原水资源分配,平原节水,平原调水,平原净水,平原水资源管理,平原水旱,平原水情,平原人水关系,平原洪水,平原碳水危机,平原水污染,平原水资源保护,平原水资源,大山雨水,大山水资源分配,大山节水,大山调水,大山净水,大山水资源管理,大山水旱,大山水情,大山人水关系,大山洪水,大山碳水危机,大山水污染,大山水资源保护,大山水资源,沿海地区雨水,沿海地区水资源分配,沿海地区节水,沿海地区调水,沿海地区净水,沿海地区水资源管理,沿海地区水旱,沿海地区水情,沿海地区人水关系,沿海地区洪水,沿海地区碳水危机,沿海地区水污染,沿海地区水资源保护,沿海地区水资源,东部雨水,东部水资源分配,东部节水,东部调水,东部净水,东部水资源管理,东部水旱,东部水情,东部人水关系,东部洪水,东部碳水危机,东部水污染,东部水资源保护,东部水资源,西部雨水,西部水资源分配,西部节水,西部调水,西部净水,西部水资源管理,西部水旱,西部水情,西部人水关系,西部洪水,西部碳水危机,西部水污染,西部水资源保护,西部水资源,南部雨水,南部水资源分配,南部节水,南部调水,南部净水,南部水资源管理,南部水旱,南部水情,南部人水关系,南部洪水,南部碳水危机,南部水污染,南部水资源保护,南部水资源,北部雨水,北部水资源分配,北部节水,北部调水,北部净水,北部水资源管理,北部水旱,北部水情,北部人水关系,北部洪水,北部碳水危机,北部水污染,北部水资源保护,北部水资源,中部雨水,中部水资源分配,中部节水,中部调水,中部净水,中部水资源管理,中部水旱,中部水情,中部人水关系,中部洪水,中部碳水危机,中部水污染,中部水资源保护,中部水资源,大陆雨水,大陆水资源分配,大陆节水,大陆调水,大陆净水,大陆水资源管理,大陆水旱,大陆水情,大陆人水关系,大陆洪水,大陆碳水危机,大陆水污染,大陆水资源保护,大陆水资源,内地雨水,内地水资源分配,内地节水,内地调水,内地净水,内地水资源管理,内地水旱,内地水情,内地人水关系,内地洪水,内地碳水危机,内地水污染,内地水资源保护,内地水资源,华中雨水,华中水资源分配,华中节水,华中调水,华中净水,华中水资源管理,华中水旱,华中水情,华中人水关系,华中洪水,华中碳水危机,华中水污染,华中水资源保护,华中水资源,华南雨水,华南水资源分配,华南节水,华南调水,华南净水,华南水资源管理,华南水旱,华南水情,华南人水关系,华南洪水,华南碳水危机,华南水污染,华南水资源保护,华南水资源,华北雨水,华北水资源分配,华北节水,华北调水,华北净水,华北水资源管理,华北水旱,华北水情,华北人水关系,华北洪水,华北碳水危机,华北水污染,华北水资源保护,华北水资源,西南雨水,西南水资源分配,西南节水,西南调水,西南净水,西南水资源管理,西南水旱,西南水情,西南人水关系,西南洪水,西南碳水危机,西南水污染,西南水资源保护,西南水资源,中国雨水")
        self.words_list = words_str.split(",")
        super(WeiboSpider, self).__init__(config)
        print("init end ......")

    def parse_url(self, re_url):
        '''发起请求'''
        try:
            time.sleep(1)
            print(re_url)
            res = requests.get(re_url, timeout=10)
            return res
        except Exception as e:
            logging.info('继续尝试一次请求, 报错信息是:{}'.format(e))
            res = self.parse_url(re_url)
            return res

    def get_data_way_1(self, cards, cards_list):
        cards_list = cards.get('cards')[0].get('card_group')
        for card in cards_list:
            item = {}
            # print(card)
            mblog = card.get('mblog')
            if mblog is None:
                page_flag = False
                break
            item['id'] = mblog.get('id')
            item['date'] = mblog.get('created_at')
            if '2022' not in item['date']:
                new_date = mblog.get('created_at')
                new_date = str(new_date).replace(
                    'Nov', 'Sep').replace('Dec', 'Oct')
                item['date'] = new_date[:-4] + "2021"
            item['text'] = mblog.get('text')
            item['location'], item[
                'coordinates'] = self.get_location(mblog)
            item['user'] = self.get_user(mblog)
            cards_list.append(item)
        return cards_list

    def get_data_way_2(self, cards_list):
        for index, card in enumerate(cards_list):
            item = {}
            card_group = card.get('card_group', [])
            if not card_group:
                continue
            mblog = card_group[0].get('mblog', {})
            item['id'] = mblog.get('id')
            item['date'] = mblog.get('created_at')
            # if '2022' not in item['date']:
            new_date = mblog.get('created_at')
            item['date'] = new_date
            # if new_date[-4:] == "2023":
            #     pass
            # else:
            #     # new_date = str(new_date).replace('Nov', 'Apr').replace('Dec', 'Apr').replace(
            #     #     'Oct', 'Mar').replace('Sep', 'Mar').replace('Aug', 'Apr').replace('Jul', 'Apr').replace('Jun', 'Apr')  # 12-4 11-4 10-3 9-3 8-2 7-2 6-1 5-1
            #     item['date'] = new_date[:-4] + "2023"

            item['text'] = mblog.get('text')
            item['location'], item['coordinates'] = self.get_location(mblog)
            item['user'] = self.get_user(mblog)
            self.mgo.set(None, item)

    @decorate.exception_capture_close_datebase
    def run(self, task={}):
        for word in self.words_list:
            logging.info('word={}'.format(word))
            # 1,61,......
            for type in ["1"]: # ,"61", "3", "62", "64", "63", "60", "38", "98", "92"
                logging.info('type={}'.format(type))
                containerid = urllib.parse.quote('100103type={}&q={}'.format(
                    type, word), safe='/', encoding=None, errors=None)

                page = 2  # 起始页必须为第二页

                while True:
                    logging.info('此时遍历的起始页：{}'.format(page))
                    r = self.parse_url(self.url.format(
                        self.GSID, self.count, page, containerid))
                    if r.status_code == 200:
                        cards = json.loads(r.text)
                        cards_list = cards.get('cards', [])
                        total = len(cards_list)
                        logging.info('该数据条数是：{} , page={}'.format(total, page))
                        if total < 1:
                            break
                        self.get_data_way_2(cards_list)
                    page += 1

    def get_location(self, mblog):
        '''获取定位'''
        location = mblog.get('user', {}).get('location', '')
        try:
            longitude = mblog.get('geo', {}).get('coordinates', [])[0]
            latitude = mblog.get('geo', {}).get('coordinates', [])[1]
            coordinates = f'({latitude},{longitude})'
        except Exception as e:
            coordinates = '无坐标'
        return location, coordinates

    def get_user(self, mblog):
        '''获取用户名'''
        name = mblog.get('user', {}).get('name', '')
        return name
